// Mocks generated by Mockito 5.4.6 from annotations
// in kindergarten_frontend/test/providers/test_notification_provider.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:kindergarten_frontend/models/attendance.dart' as _i7;
import 'package:kindergarten_frontend/models/message.dart' as _i9;
import 'package:kindergarten_frontend/models/notification.dart' as _i10;
import 'package:kindergarten_frontend/models/schedule.dart' as _i8;
import 'package:kindergarten_frontend/models/staff.dart' as _i6;
import 'package:kindergarten_frontend/models/student.dart' as _i5;
import 'package:kindergarten_frontend/services/database_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i3.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Database> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i4.Future<_i2.Database>.value(
              _FakeDatabase_0(this, Invocation.getter(#database)),
            ),
          )
          as _i4.Future<_i2.Database>);

  @override
  _i4.Future<_i2.Database> initDatabase() =>
      (super.noSuchMethod(
            Invocation.method(#initDatabase, []),
            returnValue: _i4.Future<_i2.Database>.value(
              _FakeDatabase_0(this, Invocation.method(#initDatabase, [])),
            ),
          )
          as _i4.Future<_i2.Database>);

  @override
  _i4.Future<int> insertStudent(_i5.Student? student) =>
      (super.noSuchMethod(
            Invocation.method(#insertStudent, [student]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i5.Student>> getStudents() =>
      (super.noSuchMethod(
            Invocation.method(#getStudents, []),
            returnValue: _i4.Future<List<_i5.Student>>.value(<_i5.Student>[]),
          )
          as _i4.Future<List<_i5.Student>>);

  @override
  _i4.Future<_i5.Student?> getStudent(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getStudent, [id]),
            returnValue: _i4.Future<_i5.Student?>.value(),
          )
          as _i4.Future<_i5.Student?>);

  @override
  _i4.Future<int> updateStudent(_i5.Student? student) =>
      (super.noSuchMethod(
            Invocation.method(#updateStudent, [student]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteStudent(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteStudent, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> insertStaff(_i6.Staff? staff) =>
      (super.noSuchMethod(
            Invocation.method(#insertStaff, [staff]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i6.Staff>> getStaff() =>
      (super.noSuchMethod(
            Invocation.method(#getStaff, []),
            returnValue: _i4.Future<List<_i6.Staff>>.value(<_i6.Staff>[]),
          )
          as _i4.Future<List<_i6.Staff>>);

  @override
  _i4.Future<_i6.Staff?> getStaffMember(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getStaffMember, [id]),
            returnValue: _i4.Future<_i6.Staff?>.value(),
          )
          as _i4.Future<_i6.Staff?>);

  @override
  _i4.Future<int> updateStaff(_i6.Staff? staff) =>
      (super.noSuchMethod(
            Invocation.method(#updateStaff, [staff]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteStaff(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteStaff, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> insertAttendance(_i7.Attendance? attendance) =>
      (super.noSuchMethod(
            Invocation.method(#insertAttendance, [attendance]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i7.Attendance>> getAttendance({DateTime? date}) =>
      (super.noSuchMethod(
            Invocation.method(#getAttendance, [], {#date: date}),
            returnValue: _i4.Future<List<_i7.Attendance>>.value(
              <_i7.Attendance>[],
            ),
          )
          as _i4.Future<List<_i7.Attendance>>);

  @override
  _i4.Future<int> updateAttendance(_i7.Attendance? attendance) =>
      (super.noSuchMethod(
            Invocation.method(#updateAttendance, [attendance]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> insertSchedule(_i8.Schedule? schedule) =>
      (super.noSuchMethod(
            Invocation.method(#insertSchedule, [schedule]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i8.Schedule>> getSchedules() =>
      (super.noSuchMethod(
            Invocation.method(#getSchedules, []),
            returnValue: _i4.Future<List<_i8.Schedule>>.value(<_i8.Schedule>[]),
          )
          as _i4.Future<List<_i8.Schedule>>);

  @override
  _i4.Future<int> updateSchedule(_i8.Schedule? schedule) =>
      (super.noSuchMethod(
            Invocation.method(#updateSchedule, [schedule]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteSchedule(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSchedule, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> insertMessage(_i9.Message? message) =>
      (super.noSuchMethod(
            Invocation.method(#insertMessage, [message]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i9.Message>> getMessages() =>
      (super.noSuchMethod(
            Invocation.method(#getMessages, []),
            returnValue: _i4.Future<List<_i9.Message>>.value(<_i9.Message>[]),
          )
          as _i4.Future<List<_i9.Message>>);

  @override
  _i4.Future<int> updateMessage(_i9.Message? message) =>
      (super.noSuchMethod(
            Invocation.method(#updateMessage, [message]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> insertNotification(_i10.AppNotification? notification) =>
      (super.noSuchMethod(
            Invocation.method(#insertNotification, [notification]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<_i10.AppNotification>> getNotifications() =>
      (super.noSuchMethod(
            Invocation.method(#getNotifications, []),
            returnValue: _i4.Future<List<_i10.AppNotification>>.value(
              <_i10.AppNotification>[],
            ),
          )
          as _i4.Future<List<_i10.AppNotification>>);

  @override
  _i4.Future<int> updateNotification(_i10.AppNotification? notification) =>
      (super.noSuchMethod(
            Invocation.method(#updateNotification, [notification]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);
}
