{"is_source_file": true, "format": "Dart", "description": "This source file defines the DataRepository class, acting as an abstraction layer for data storage and retrieval in a kindergarten management system. It handles data interactions with either a local SQLite database or a remote API depending on the environment mode, providing methods for managing students, staff, attendance records, schedules, messages, and notifications.", "external_files": ["package:flutter_dotenv/flutter_dotenv.dart", "package:sqflite/sqflite.dart", "../models/models.dart", "api_client.dart", "local_db.dart"], "external_methods": ["dotenv.env", "ApiClient.fromEnv", "ApiClient.getList", "ApiClient.post", "ApiClient.delete", "LocalDb.instance", "Student.fromMap", "Student.toMap", "Staff.fromMap", "Staff.toMap", "AttendanceRecord.fromMap", "AttendanceRecord.toMap", "ClassSchedule.fromMap", "ClassSchedule.toMap", "Message.fromMap", "Message.toMap", "AppNotification.fromMap", "AppNotification.toMap"], "published": ["DataRepository"], "classes": [{"name": "DataRepository", "description": "A repository class that manages data operations for the kindergarten system, supporting switching between local and remote data sources."}], "methods": [{"name": "create", "description": "Factory method that creates a DataRepository instance configured based on the environment (local or production)."}, {"name": "_db", "description": "Returns the singleton instance of the local SQLite database."}, {"name": "fetchStudents", "description": "Fetches a list of students from either the API or local database."}, {"name": "addStudent", "description": "Adds a new student record to the API or local database."}, {"name": "deleteStudent", "description": "Deletes a student record by ID from the API or local database."}, {"name": "fetchStaff", "description": "Fetches a list of staff members from either the API or local database."}, {"name": "addStaff", "description": "Adds a new staff record to the API or local database."}, {"name": "deleteStaff", "description": "Deletes a staff record by ID from the API or local database."}, {"name": "fetchAttendanceForDate", "description": "Retrieves attendance records for a specific date from either the API or local database."}, {"name": "addAttendance", "description": "Adds an attendance record to the API or local database."}, {"name": "fetchSchedules", "description": "Fetches class schedule data from either the API or local database."}, {"name": "addSchedule", "description": "Adds a new schedule record to the API or local database."}, {"name": "deleteSchedule", "description": "Deletes a schedule record by ID from the API or local database."}, {"name": "fetchMessages", "description": "Retrieves message records from either the API or local database."}, {"name": "sendMessage", "description": "Sends a message via the API or stores it locally."}, {"name": "fetchNotifications", "description": "Fetches notification records from either the API or local database."}, {"name": "addNotification", "description": "Creates a new notification record in the API or local database."}], "calls": ["dotenv.env['MODE']", "ApiClient.fromEnv()", "api!.getList()", "api!.post()", "api!.delete()", "LocalDb.instance()", "Student.fromMap()", "Student.toMap()", "Staff.fromMap()", "Staff.toMap()", "AttendanceRecord.fromMap()", "AttendanceRecord.toMap()", "ClassSchedule.fromMap()", "ClassSchedule.toMap()", "Message.fromMap()", "Message.toMap()", "AppNotification.fromMap()", "AppNotification.toMap()"], "search-terms": ["DataRepository", "localDb", "apiClient", "fetchStudents", "addStudent", "deleteStudent", "fetchStaff", "addStaff", "deleteStaff", "fetchAttendance", "addAttendance", "fetchSchedules", "addSchedule", "deleteSchedule", "fetchMessages", "sendMessage", "fetchNotifications", "addNotification", "MODE environment variable", "local or prod mode"], "state": 2, "file_id": 30, "knowledge_revision": 69, "git_revision": "", "hash": "28325afb34e4975d97383bb71a78c08e", "format-version": 4, "code-base-name": "kindergarten_frontend", "filename": "kindergarten_frontend/lib/src/services/data_repository.dart", "revision_history": [{"69": ""}]}